<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Redis - 标签 - _浅行</title><link>https://liwanggui.com/tags/redis/</link><description>Redis - 标签 - _浅行</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>liwanggui@163.com (李王贵)</managingEditor><webMaster>liwanggui@163.com (李王贵)</webMaster><lastBuildDate>Fri, 25 Mar 2022 16:56:26 +0800</lastBuildDate><atom:link href="https://liwanggui.com/tags/redis/" rel="self" type="application/rss+xml"/><item><title>Redis 5.x 分片集群部署</title><link>https://liwanggui.com/posts/redis-cluster-2/</link><pubDate>Fri, 25 Mar 2022 16:56:26 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/redis-cluster-2/</guid><description><![CDATA[Redis 5.x 及以上版本配置分片集群不需要在使用 redis-trib.rb 脚本，默认 redis-cli 已集成集群配置指令 bash [root@localhost ~]# redis-cli --cluster help Cluster Manager Commands: create host1:port1 ... hostN:portN --cluster-replicas &lt;arg&gt; check host:port --cluster-search-multiple-owners info host:port fix host:port --cluster-search-multiple-owners reshard host:port --cluster-from &lt;arg&gt; --cluster-to &lt;arg&gt; --cluster-slots &lt;arg&gt; --cluster-yes --cluster-timeout &lt;arg&gt; --cluster-pipeline]]></description></item><item><title>Redis 4.x 分片集群部署</title><link>https://liwanggui.com/posts/redis-cluster-1/</link><pubDate>Thu, 24 Mar 2022 15:43:02 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/redis-cluster-1/</guid><description>简单介绍高可用 在搭建集群时，会为每一个分片的主节点，对应一个从节点，实现 slaveof 的功能，同时当主节点 down，实现类似于 sentinel 的自动 failover 的功能。 redi</description></item><item><title>Redis Sentinel 高可用</title><link>https://liwanggui.com/posts/redis-sentinel/</link><pubDate>Sun, 28 Mar 2021 17:08:48 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/redis-sentinel/</guid><description>Redis Replication Replication 原理 副本库通过 slaveof 127.0.0.1 6380 命令, 连接主库, 并发送 SYNC 给主库 主库收到 SYNC, 会立即触发 BGSAVE, 后台保存 RDB, 发送给副本库 副本库接收后会应用 RDB 快照 主库会陆续将中间</description></item><item><title>Redis 基础操作</title><link>https://liwanggui.com/posts/redis-cli/</link><pubDate>Sun, 28 Mar 2021 08:58:09 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/redis-cli/</guid><description>Redis 命令 管理命令 info: 查看 Redis 当前状态信息 bash 127.0.0.1:6379&amp;gt; info # Server redis_version:3.2.9 redis_git_sha1:00000000 redis_git_dirty:0 redis_build_id:f0e03a357ae83877 redis_mode:standalone os:Linux 3.10.0-862.el7.x86_64 x86_64 arch_bits:64 multiplexing_api:epoll gcc_version:4.8.5 process_id:2502 run_id:c913615b9c199a0d7ba4454c38e1a65427525c60 tcp_port:6379 uptime_in_seconds:2047 uptime_in_days:0 hz:10 lru_clock:6276784 executable:/usr/local/bin/redis-server config_file:/etc/redis/6379.conf # Clients connected_clients:1 client_longest_output_list:0 client_biggest_input_buf:0 blocked_clients:0 ...(略) # 只查看特定的信息 127.0.0.1:6379&amp;gt; info Memory # Memory used_memory:821088 used_memory_human:801.84K</description></item><item><title>Redis 的简单安装与使用</title><link>https://liwanggui.com/posts/redis-install/</link><pubDate>Fri, 12 Feb 2021 11:51:01 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/redis-install/</guid><description>使用场景介绍Memcached：多核的缓存服务，更加适合于多用户并发访问次数较少的应用场景 Redis：单核的缓存服务，单节点情况下，更加适合</description></item></channel></rss>