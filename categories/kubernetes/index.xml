<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Kubernetes - 分类 - _浅行</title><link>https://liwanggui.com/categories/kubernetes/</link><description>Kubernetes - 分类 - _浅行</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>liwanggui@163.com (李王贵)</managingEditor><webMaster>liwanggui@163.com (李王贵)</webMaster><lastBuildDate>Thu, 29 Apr 2021 11:29:27 +0800</lastBuildDate><atom:link href="https://liwanggui.com/categories/kubernetes/" rel="self" type="application/rss+xml"/><item><title>使用 jenkins 实现 Kubernetes CI</title><link>https://liwanggui.com/posts/kubernetes-jenkinsci/</link><pubDate>Thu, 29 Apr 2021 11:29:27 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-jenkinsci/</guid><description>部署 Jenkinsrbac.yaml 创建 ServiceAccount: jenkins-ci 授予 cluster-admin 权限， jenkins 在 kubernetes 集群中创建工作节点需要权限 你也可以在 kubernetes 插件中配置验证信息 yaml apiVersion: v1 kind: ServiceAccount metadata: name: jenkins-ci namespace: devops --- apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: name: jenkins-ci namespace: devops roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name:</description></item><item><title>使用 Gogs 服务实现代码仓库管理</title><link>https://liwanggui.com/posts/kubernetes-git/</link><pubDate>Thu, 29 Apr 2021 11:29:00 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-git/</guid><description>部署 Gogs互联网常用的 git 代码仓库管理软件有 gitlab, gogs, gitea(gogs 的克隆版) 等，本例为了简单点使用 gogs 作为 git 仓库管理工作部署在 kubernetes 集群中 提示: gitea 部署过和 gogs 基本一</description></item><item><title>扩展 NFS 向 Kubernetes 提供动态 PVC 功能</title><link>https://liwanggui.com/posts/kubernetes-nfs-client/</link><pubDate>Thu, 29 Apr 2021 10:19:47 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-nfs-client/</guid><description>简介Kubernetes 支持动态申请 PV 和 PVC 的功能，但是 NFS 存储本身不支持这个功能，但是 NFS 存储又是非常常用的一种共享存储。nfs-subdir-</description></item><item><title>使用 Prometheus 监控 Kubernetes 集群</title><link>https://liwanggui.com/posts/kubernetes-prometheus/</link><pubDate>Fri, 19 Mar 2021 10:06:23 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-prometheus/</guid><description>部署 Prometheus 准备资源配置清单我们将 prometheus.yml 配置文件以 configmap 的形式存储在 kubernetes 集群中。(configmap.yaml) yaml apiVersion: v1 kind: ConfigMap metadata: name: prometheus-cfg namespace: monitor data: prometheus.yml: | global: scrape_interval: 30s scrape_timeout: 30s evaluation_interval: 1m scrape_configs: -</description></item><item><title>使用 Traefik-2.4 进行灰度发布</title><link>https://liwanggui.com/posts/kubernetes-traefik-canary/</link><pubDate>Wed, 10 Mar 2021 17:49:01 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-traefik-canary/</guid><description>Traefik 灰度发布概述Traefik2.0 的一个更强大的功能就是灰度发布，灰度发布我们有时候也会称为金丝雀发布（Canary），主要就是让一部分测试</description></item><item><title>使用 Traefik-2.4 暴露 Kubernetes 内部 TCP 协议</title><link>https://liwanggui.com/posts/kubernetes-traefik-tcp/</link><pubDate>Wed, 10 Mar 2021 17:43:01 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-traefik-tcp/</guid><description>简单 TCP 服务首先部署一个普通的 mongo 服务，资源清单文件如下所示：（mongo.yaml） yaml apiVersion: apps/v1 kind: Deployment metadata: name: mongo-traefik labels: app: mongo-traefik spec: selector: matchLabels: app: mongo-traefik template: metadata: labels: app: mongo-traefik spec: containers: - name: mongo image: mongo:4.0 ports:</description></item><item><title>使用 Traefik-2.4 暴露 Kubernetes 内部 Web 服务</title><link>https://liwanggui.com/posts/kubernetes-traefik-web/</link><pubDate>Wed, 10 Mar 2021 10:43:26 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-traefik-web/</guid><description>部署测试 web 应用使用 Deployment 部署 nginx， 启动两个 pod 实例， 资源配置清单 nginx.yaml 如下： yaml apiVersion: apps/v1 kind: Deployment metadata: labels: app: nginx name: nginx namespace: default spec: replicas: 2 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:stable-alpine --- apiVersion:</description></item><item><title>使用 metrics-server 采集 Kubernetes 集群性能指标</title><link>https://liwanggui.com/posts/kubernetes-metricsserver/</link><pubDate>Tue, 09 Mar 2021 18:59:33 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-metricsserver/</guid><description>部署 Metrics Server在 kubernetes 中 HPA 自动伸缩指标依据，kubectl top 命令的资源使用率，可以通过 metrics-server 来获取。 dashboard 也会引用 metrics-server 展示资源负载情况图表。但是官方明</description></item><item><title>使用 Dashborad 管理 Kubernetes 集群</title><link>https://liwanggui.com/posts/kubernetes-dashboard/</link><pubDate>Tue, 09 Mar 2021 15:52:42 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-dashboard/</guid><description>Dashboard 介绍Kubernetes Dashboard 是 Kubernetes 集群的基于 Web 的通用 UI。 它允许用户管理群集中运行的应用程序并对其进行故障排除，以及管理群集本身。 Dashboard 的 Github 主页：</description></item><item><title>部署 Traefik 2.4</title><link>https://liwanggui.com/posts/kubernetes-traefik/</link><pubDate>Tue, 09 Mar 2021 14:50:33 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/kubernetes-traefik/</guid><description>Traefik 简介 Traefik 是一个开源的可以使服务发布变得轻松有趣的边缘路由器。它负责接收你系统的请求，然后使用合适的组件来对这些请求进行处理。 除了众多的功能之</description></item></channel></rss>