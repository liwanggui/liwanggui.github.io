<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Mysql - 分类 - _浅行</title><link>https://liwanggui.com/categories/mysql/</link><description>Mysql - 分类 - _浅行</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>liwanggui@163.com (李王贵)</managingEditor><webMaster>liwanggui@163.com (李王贵)</webMaster><lastBuildDate>Tue, 07 Nov 2023 10:03:59 +0800</lastBuildDate><atom:link href="https://liwanggui.com/categories/mysql/" rel="self" type="application/rss+xml"/><item><title>构建 MySQL 8.x MGR 集群</title><link>https://liwanggui.com/posts/mysql-mgr/</link><pubDate>Tue, 07 Nov 2023 10:03:59 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-mgr/</guid><description>本文以 GreatSQL 数据库 为例，介绍构建 MGR 集群配置 1. MGR集群规划本次计划在3台服务器上安装 GreatSQL 数据库并部署 MGR 集群： node ip datadir port role GreatSQL-01 10.10.1.24 /data/GreatSQL/ 3306 PRIMARY GreatSQL-02 10.10.2.3 /data/GreatSQL/ 3306 SECONDARY GreatSQL-03 10.10.2.4 /data/GreatSQL/ 3306</description></item><item><title>MaxScale：实现MySQL读写分离与负载均衡的中间件利器</title><link>https://liwanggui.com/posts/mysql-maxscale-readwrite-separation/</link><pubDate>Thu, 14 Jan 2021 14:22:46 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-maxscale-readwrite-separation/</guid><description>参考资料: DBAplus 社区 搭建主从集群参考 MySQL GTID 主从复制配置 安装 MaxScale MaxScale Github 地址 MaxScale 下载地址 bash yum install https://downloads.mariadb.com/MaxScale/2.5.6/centos/7/x86_64/maxscale-2.5.6-1.rhel.7.x86_64.rpm 配置 MaxScale在主库创建监控用户，路由用户 sql # 监控账号</description></item><item><title>MySQL MHA 高可用配置</title><link>https://liwanggui.com/posts/mysql-mha/</link><pubDate>Thu, 14 Jan 2021 10:17:10 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-mha/</guid><description>MySQL MHA 架构介绍官方文档: https://github.com/yoshinorim/mha4mysql-manager/wiki MHA（Master High Availability）目前在MySQL高可用方面是一个相对成熟的解决方案，它由日本 DeNA 公司 y</description></item><item><title>MySQL 主从复制优化</title><link>https://liwanggui.com/posts/mysql-replication-optimization/</link><pubDate>Wed, 13 Jan 2021 15:13:42 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-replication-optimization/</guid><description>优化参数 ini [mysqld] # 从库配置优化 master_info_repository = TABLE relay_log_info_repository = TABLE relay_log_recovery = 1 relay-log-purge = 1 read_only = 1 super_read_only = 1 master.info: 存储连接主库的信息，已经接收的 binlog 位置点信息 (默认在从库数据目录中) 配置项: master_info_repository</description></item><item><title>MySQL 从库扩展</title><link>https://liwanggui.com/posts/mysql-slave-extend/</link><pubDate>Wed, 13 Jan 2021 15:10:47 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-slave-extend/</guid><description>延时从库应用场景：普通主从正常情况可以应对物理损坏，但无法应用逻辑损坏。例如: drop 和 delete 等操作。 延时从库可以应对这种逻辑损坏场景： 主库做了某项操</description></item><item><title>MySQL GTID 从库快速恢复</title><link>https://liwanggui.com/posts/mysql-restore-gtid-replication/</link><pubDate>Wed, 13 Jan 2021 14:41:02 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-restore-gtid-replication/</guid><description>备份主库为了节省恢复的时间我们使用 xtrabackup 备份主库，然后拷贝到从库再将数据恢复到从库中 完整备份主库 bash # 备份 xtrabackup --defaults-file=/usr/local/mysql/etc/my.cnf -S /data/mysql/mysql.sock -u root -p --backup --target-dir=/data/backup 恢复主从复制 恢复从库数</description></item><item><title>MySQL GTID 主从复制配置</title><link>https://liwanggui.com/posts/mysql-gtid-replication/</link><pubDate>Wed, 13 Jan 2021 11:22:37 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-gtid-replication/</guid><description>环境准备准备两台服务器安装 MySQL 5.7, 参考 安装 MySQL 5.7 服务器列表 master: 10.10.1.11/24 slave1: 10.10.1.12/24 配置 MySQL配置基于 GTID 的主从复制需要启动 gtid 和 binlog 功能，具体配置如下 主库: my.cnf ini [client] port</description></item><item><title>MySQL 经典主从复制配置</title><link>https://liwanggui.com/posts/mysql-classic-replication/</link><pubDate>Wed, 13 Jan 2021 11:22:30 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-classic-replication/</guid><description>安装 MySQL 5.7服务器列表 master: 10.10.1.2/24 slave1: 10.10.1.3/24 下载 MySQL bash root@db2:/usr/local/src# wget https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz root@db1:/usr/local/src# tar xzf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz -C /usr/local/ root@db1:/usr/local# ln -s /usr/local/mysql-5.7.28-linux-glibc2.12-x86_64/ /usr/local/mysql 环境准备 bash # 安装依赖 root@db1:/usr/local/mysql# apt-get install libaio1 # 创建程序用户 root@db1:/usr/local/mysql# useradd -r -s /sbin/nologin mysql # 创建数据目录 root@db1:/usr/local/mysql# mkdir -p</description></item><item><title>MySQL GITD 模式</title><link>https://liwanggui.com/posts/mysql-gtid/</link><pubDate>Tue, 12 Jan 2021 15:11:00 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-gtid/</guid><description>GTID 的概述是对一个已提交事务的编号，并且是全局唯一的编号 全局事物标识：global transaction identifieds。 GTID事物是全局唯一性的，且一个</description></item><item><title>MySQL 慢日志</title><link>https://liwanggui.com/posts/mysql-slowlog/</link><pubDate>Tue, 12 Jan 2021 14:07:35 +0800</pubDate><author><name>李王贵</name></author><guid>https://liwanggui.com/posts/mysql-slowlog/</guid><description>slowlog 慢日志 作用记录 MySQL 运行过程运行过慢的语句，通过一个文本的文件记录下来。 帮助我们进行语句优化工作。 配置慢日志 bash root@db1:~# cat /usr/local/mysql/etc/my.cnf [mysqld] # 慢语句开关 slow_query_log = 1 # 慢日</description></item></channel></rss>